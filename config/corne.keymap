/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// TODO:
// - [X] !! Add enter key
// - [ ] ! Add bt keys
// - [ ] Add media keys
// - [ ] Add firmware keys
// - [ ] Chord raise/lower

// * LAYERS
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | \ |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RET  |
//                    | GUI | LWR | BKSP |   | SPC | RSE  | ALT |
                        display-name = "Base";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LGUI &mo 1 &kp BKSP   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | `    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      |     |     |  -  |  +  |     |   | LFT | DWN |  UP | RGT |     |      |
// | CAPS |     |     |  _  |  =  |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        display-name = "Lower";
                        bindings = <
   &kp GRAVE &kp N1 &kp N2 &kp N3    &kp N4    &kp N5  /* */  &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &trans
   &bt       &trans &trans &kp MINUS &kp PLUS  &trans  /* */  &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp CAPS  &trans &trans &kp UNDER &kp EQUAL &trans  /* */  &trans   &trans   &trans &trans    &trans &trans
                           &trans    &trans    &trans  /* */  &trans   &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |      |     |     |     |     |     |   |  [  |  {  |  }  |  ]  |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        display-name = "Raise";
                        bindings = <
   &trans &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT /* */  &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans &trans   &trans &trans   &trans   &trans    /* */  &kp LBKT  &kp LBRC  &kp RBRC        &kp RBKT &trans   &trans
   &trans &trans   &trans &trans   &trans   &trans    /* */  &trans    &trans    &trans          &trans   &trans   &trans
                          &trans   &trans   &trans    /* */  &trans    &trans    &trans
                        >;
                };
        };
};

// * COMBOS
/ {
        combos {
                compatible = "zmk,combos";
                combo_esc_jk {
                        timeout-ms = <50>;
                        key-positions = <19 20>;
                        bindings = <&kp ESC>;
                };
        };
};

